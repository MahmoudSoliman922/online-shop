{"ast":null,"code":"import _objectSpread from \"/usr/src/frontend-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/usr/src/frontend-app/src/components/offers/offers_component.js\";\nimport React, { Component, Fragment } from 'react';\nimport styled, { ThemeProvider, createGlobalStyle } from 'styled-components';\nimport Table from '../shared/Table';\nimport { getAllOffers, getPaginatedOffers, getFilteredOffers } from './offers_requests';\nimport { TableDiv, ExplainationDiv, HeaderDiv, Label, Click, Dot, Button, DotDiv, ButtonDiv, theme } from './offers_styles';\nconst GlobalStyles = createGlobalStyle`\n  @import url(\"https://fonts.googleapis.com/css?family=Lobster&display=swap\");\n  @import url(\"https://fonts.googleapis.com/css?family=Saira&display=swap\");\n  body {\n    font-family: 'Lobster', cursive;\n  }\n`;\n\nclass OffersComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      departement: [],\n      serverSidePagination: false\n    };\n\n    this.convertDepartements = offers => {\n      return offers.map(offer => {\n        return offer.departement_name;\n      });\n    };\n\n    this.switchToServerSidePagination = () => {\n      theme.color = theme.color === 'grey' ? 'green' : 'grey';\n      this.setState(_objectSpread({}, this.state, {\n        serverSidePagination: !this.state.serverSidePagination\n      }));\n    };\n  }\n\n  componentDidMount() {\n    getAllOffers().then(res => {\n      let departements = this.convertDepartements(res.data.response.offers);\n      this.setState(_objectSpread({}, this.state, {\n        departement: departements\n      }));\n    });\n  }\n\n  render() {\n    let columns = [{\n      name: 'departement_name',\n      label: 'Departement Name',\n      options: {\n        filter: true,\n        sort: true,\n        searchable: false,\n        filterOptions: {\n          names: this.state.departement\n        }\n      }\n    }, {\n      name: 'product_name',\n      label: 'Product Name',\n      options: {\n        filter: false\n      }\n    }, {\n      name: 'product_price',\n      label: 'Product Price',\n      options: {\n        filter: false,\n        searchable: false\n      }\n    }, {\n      name: 'promotion_code',\n      label: 'Promotion Code',\n      options: {\n        searchable: false,\n        filter: false\n      }\n    }, {\n      name: 'promotion_active',\n      label: 'Promotion Status',\n      options: {\n        filter: true,\n        searchable: false,\n        filterOptions: {\n          names: [true, false]\n        },\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, value.toString());\n        }\n      }\n    }, {\n      name: 'promotion_discount',\n      label: 'Promotion Discount',\n      options: {\n        filter: false,\n        searchable: false\n      }\n    }];\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(GlobalStyles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), this.state.departement.length !== 0 && React.createElement(ThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(HeaderDiv, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(ButtonDiv, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => {\n        this.switchToServerSidePagination();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Switch\")), React.createElement(DotDiv, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Dot, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }))), React.createElement(TableDiv, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: columns,\n      data: this.state.data,\n      serverSide: this.state.serverSidePagination,\n      getAll: getAllOffers,\n      getPaginated: getPaginatedOffers,\n      getFiltered: getFilteredOffers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(ExplainationDiv, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"You should\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(Click, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"click\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"on the switch button to activate the server side pagination and filter\"))));\n  }\n\n}\n\nexport default OffersComponent;","map":{"version":3,"sources":["/usr/src/frontend-app/src/components/offers/offers_component.js"],"names":["React","Component","Fragment","styled","ThemeProvider","createGlobalStyle","Table","getAllOffers","getPaginatedOffers","getFilteredOffers","TableDiv","ExplainationDiv","HeaderDiv","Label","Click","Dot","Button","DotDiv","ButtonDiv","theme","GlobalStyles","OffersComponent","state","departement","serverSidePagination","convertDepartements","offers","map","offer","departement_name","switchToServerSidePagination","color","setState","componentDidMount","then","res","departements","data","response","render","columns","name","label","options","filter","sort","searchable","filterOptions","names","customBodyRender","value","tableMeta","updateValue","toString","length"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport styled, { ThemeProvider, createGlobalStyle } from 'styled-components';\nimport Table from '../shared/Table';\nimport { getAllOffers, getPaginatedOffers, getFilteredOffers } from './offers_requests';\nimport { TableDiv, ExplainationDiv, HeaderDiv, Label, Click, Dot, Button, DotDiv, ButtonDiv, theme } from './offers_styles';\nconst GlobalStyles = createGlobalStyle`\n  @import url(\"https://fonts.googleapis.com/css?family=Lobster&display=swap\");\n  @import url(\"https://fonts.googleapis.com/css?family=Saira&display=swap\");\n  body {\n    font-family: 'Lobster', cursive;\n  }\n`;\n\nclass OffersComponent extends Component {\n  state = {\n    departement: [],\n    serverSidePagination: false\n  };\n\n  convertDepartements = offers => {\n    return offers.map(offer => {\n      return offer.departement_name;\n    });\n  };\n\n  componentDidMount() {\n    getAllOffers().then(res => {\n      let departements = this.convertDepartements(res.data.response.offers);\n      this.setState({\n        ...this.state,\n        departement: departements\n      });\n    });\n  }\n\n  switchToServerSidePagination = () => {\n    theme.color = theme.color === 'grey' ? 'green' : 'grey';\n    this.setState({\n      ...this.state,\n      serverSidePagination: !this.state.serverSidePagination\n    });\n  };\n\n  render() {\n    let columns = [\n      {\n        name: 'departement_name',\n        label: 'Departement Name',\n        options: {\n          filter: true,\n          sort: true,\n          searchable: false,\n          filterOptions: { names: this.state.departement }\n        }\n      },\n      {\n        name: 'product_name',\n        label: 'Product Name',\n        options: {\n          filter: false\n        }\n      },\n      {\n        name: 'product_price',\n        label: 'Product Price',\n        options: {\n          filter: false,\n          searchable: false\n        }\n      },\n      {\n        name: 'promotion_code',\n        label: 'Promotion Code',\n        options: {\n          searchable: false,\n          filter: false\n        }\n      },\n      {\n        name: 'promotion_active',\n        label: 'Promotion Status',\n        options: {\n          filter: true,\n          searchable: false,\n          filterOptions: {\n            names: [true, false]\n          },\n          customBodyRender: (value, tableMeta, updateValue) => {\n            return <p>{value.toString()}</p>;\n          }\n        }\n      },\n      {\n        name: 'promotion_discount',\n        label: 'Promotion Discount',\n        options: {\n          filter: false,\n          searchable: false\n        }\n      }\n    ];\n    return (\n      <Fragment>\n        <GlobalStyles />\n        {this.state.departement.length !== 0 && (\n          <ThemeProvider theme={theme}>\n            <HeaderDiv>\n              <ButtonDiv>\n                <Button\n                  onClick={() => {\n                    this.switchToServerSidePagination();\n                  }}\n                >\n                  Switch\n                </Button>\n              </ButtonDiv>\n              <DotDiv>\n                <Dot />\n              </DotDiv>\n            </HeaderDiv>\n            <TableDiv>\n              <Table\n                columns={columns}\n                data={this.state.data}\n                serverSide={this.state.serverSidePagination}\n                getAll={getAllOffers}\n                getPaginated={getPaginatedOffers}\n                getFiltered={getFilteredOffers}\n              />\n            </TableDiv>\n            <ExplainationDiv>\n              <Label>You should</Label>\n              <br />\n              <Click>click</Click>\n              <br />\n              <Label>on the switch button to activate the server side pagination and filter</Label>\n            </ExplainationDiv>\n          </ThemeProvider>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default OffersComponent;\n"]},"metadata":{},"sourceType":"module"}